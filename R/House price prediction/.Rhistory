SellerG_RT + SellerG_Fletchers + SellerG_Buxton + SellerG_Marshall +
SellerG_Jellis + Postcode_3147 + Postcode_3145 + Postcode_3127 +
Postcode_3081 + Postcode_3031 + Postcode_3181 + Postcode_3015 +
Postcode_3188 + Postcode_3012 + Postcode_3204 + Postcode_3058 +
Postcode_3163 + Postcode_3040 + Postcode_3032 + Postcode_3046 +
Postcode_3020 + CouncilArea_Brimbank + CouncilArea_Melbourne +
CouncilArea_Banyule + CouncilArea_Yarra + CouncilArea_Maribyrnong +
CouncilArea_Stonnington + CouncilArea_GlenEira + CouncilArea_MooneeValley +
CouncilArea_Moreland + CouncilArea_Boroondara-CouncilArea_GlenEira-SellerG_Buxton
-SellerG_McGrath-Suburb_Footscray-Postcode_3147-Postcode_3145,data=housing_train1)
summary(train1.fit)
train1.fit=lm(Price ~ Distance + Bathroom + Landsize + YearBuilt_flag_NA +
Suburb_Doncaster + Suburb_Footscray + Suburb_Thornbury +
Suburb_Hampton + Suburb_Balwyn + Suburb_Camberwell + Suburb_BrightonEast +
Suburb_Hawthorn + Suburb_Northcote + Suburb_Kew + Suburb_Brighton +
Suburb_Brunswick + Suburb_SouthYarra + Suburb_Preston + Suburb_Richmond +
Suburb_BentleighEast + Suburb_Reservoir + Type_u + Type_h +
Method_PI + Method_S + SellerG_Kay + SellerG_McGrath + SellerG_Miles +
SellerG_RT + SellerG_Fletchers + SellerG_Buxton + SellerG_Marshall +
SellerG_Jellis + Postcode_3147 + Postcode_3145 + Postcode_3127 +
Postcode_3081 + Postcode_3031 + Postcode_3181 + Postcode_3015 +
Postcode_3188 + Postcode_3012 + Postcode_3204 + Postcode_3058 +
Postcode_3163 + Postcode_3040 + Postcode_3032 + Postcode_3046 +
Postcode_3020 + CouncilArea_Brimbank + CouncilArea_Melbourne +
CouncilArea_Banyule + CouncilArea_Yarra + CouncilArea_Maribyrnong +
CouncilArea_Stonnington + CouncilArea_GlenEira + CouncilArea_MooneeValley +
CouncilArea_Moreland + CouncilArea_Boroondara-CouncilArea_GlenEira-SellerG_Buxton
-SellerG_McGrath-Suburb_Footscray-Postcode_3147-Postcode_3145-Method_PI,data=housing_train1)
summary(train1.fit)
train1.fit=lm(Price ~ Distance + Bathroom + Landsize + YearBuilt_flag_NA +
Suburb_Doncaster + Suburb_Footscray + Suburb_Thornbury +
Suburb_Hampton + Suburb_Balwyn + Suburb_Camberwell + Suburb_BrightonEast +
Suburb_Hawthorn + Suburb_Northcote + Suburb_Kew + Suburb_Brighton +
Suburb_Brunswick + Suburb_SouthYarra + Suburb_Preston + Suburb_Richmond +
Suburb_BentleighEast + Suburb_Reservoir + Type_u + Type_h +
Method_PI + Method_S + SellerG_Kay + SellerG_McGrath + SellerG_Miles +
SellerG_RT + SellerG_Fletchers + SellerG_Buxton + SellerG_Marshall +
SellerG_Jellis + Postcode_3147 + Postcode_3145 + Postcode_3127 +
Postcode_3081 + Postcode_3031 + Postcode_3181 + Postcode_3015 +
Postcode_3188 + Postcode_3012 + Postcode_3204 + Postcode_3058 +
Postcode_3163 + Postcode_3040 + Postcode_3032 + Postcode_3046 +
Postcode_3020 + CouncilArea_Brimbank + CouncilArea_Melbourne +
CouncilArea_Banyule + CouncilArea_Yarra + CouncilArea_Maribyrnong +
CouncilArea_Stonnington + CouncilArea_GlenEira + CouncilArea_MooneeValley +
CouncilArea_Moreland + CouncilArea_Boroondara-CouncilArea_GlenEira-SellerG_Buxton
-SellerG_McGrath-Suburb_Footscray-Postcode_3147-Postcode_3145-Method_PI-Postcode_3012,data=housing_train1)
summary(train1.fit)
train1.fit=lm(Price ~ Distance + Bathroom + Landsize + YearBuilt_flag_NA +
Suburb_Doncaster + Suburb_Footscray + Suburb_Thornbury +
Suburb_Hampton + Suburb_Balwyn + Suburb_Camberwell + Suburb_BrightonEast +
Suburb_Hawthorn + Suburb_Northcote + Suburb_Kew + Suburb_Brighton +
Suburb_Brunswick + Suburb_SouthYarra + Suburb_Preston + Suburb_Richmond +
Suburb_BentleighEast + Suburb_Reservoir + Type_u + Type_h +
Method_PI + Method_S + SellerG_Kay + SellerG_McGrath + SellerG_Miles +
SellerG_RT + SellerG_Fletchers + SellerG_Buxton + SellerG_Marshall +
SellerG_Jellis + Postcode_3147 + Postcode_3145 + Postcode_3127 +
Postcode_3081 + Postcode_3031 + Postcode_3181 + Postcode_3015 +
Postcode_3188 + Postcode_3012 + Postcode_3204 + Postcode_3058 +
Postcode_3163 + Postcode_3040 + Postcode_3032 + Postcode_3046 +
Postcode_3020 + CouncilArea_Brimbank + CouncilArea_Melbourne +
CouncilArea_Banyule + CouncilArea_Yarra + CouncilArea_Maribyrnong +
CouncilArea_Stonnington + CouncilArea_GlenEira + CouncilArea_MooneeValley +
CouncilArea_Moreland + CouncilArea_Boroondara-CouncilArea_GlenEira-SellerG_Buxton
-SellerG_McGrath-Suburb_Footscray-Postcode_3147-Postcode_3145-Method_PI-Postcode_3012-Suburb_Brunswick,data=housing_train1)
summary(train1.fit)
train2.pred=predict(train1.fit,newdata = housing_train2)
((train2.pred)-(housing_train2$Price))**2%>%mean()%>%sqrt()
train.fit=lm(Price~.,data = housing_train)
sort(vif(train.fit),decreasing = T)
summary(train.fit)
train.fit=lm(Price~.-Postcode_3039-Postcode_3071-Postcode_3013-Postcode_3103-Postcode_3124
-Postcode_3207-Postcode_3044-Postcode_3187-Postcode_3122-Postcode_3104-Postcode_3070
-Postcode_3101-Postcode_3186-Postcode_3146-Postcode_3056-Postcode_3141-Postcode_3182
-Postcode_3072-Postcode_3165-Postcode_3073,data = housing_train)
sort(vif(train.fit),decreasing = T)
train.fit=lm(Price~.-Postcode_3039-Postcode_3071-Postcode_3013-Postcode_3103-Postcode_3124
-Postcode_3207-Postcode_3044-Postcode_3187-Postcode_3122-Postcode_3104-Postcode_3070
-Postcode_3101-Postcode_3186-Postcode_3146-Postcode_3056-Postcode_3141-Postcode_3182
-Postcode_3072-Postcode_3165-Postcode_3073-Bedroom2,data = housing_train)
sort(vif(train.fit),decreasing = T)
train.fit=lm(Price~.-Postcode_3039-Postcode_3071-Postcode_3013-Postcode_3103-Postcode_3124
-Postcode_3207-Postcode_3044-Postcode_3187-Postcode_3122-Postcode_3104-Postcode_3070
-Postcode_3101-Postcode_3186-Postcode_3146-Postcode_3056-Postcode_3141-Postcode_3182
-Postcode_3072-Postcode_3165-Postcode_3073-Bedroom2-Car,data = housing_train)
sort(vif(train.fit),decreasing = T)
train.fit=lm(Price~.-Postcode_3039-Postcode_3071-Postcode_3013-Postcode_3103-Postcode_3124
-Postcode_3207-Postcode_3044-Postcode_3187-Postcode_3122-Postcode_3104-Postcode_3070
-Postcode_3101-Postcode_3186-Postcode_3146-Postcode_3056-Postcode_3141-Postcode_3182
-Postcode_3072-Postcode_3165-Postcode_3073-Bedroom2-Car-BuildingArea,data = housing_train)
sort(vif(train.fit),decreasing = T)
train.fit=lm(Price~.-Postcode_3039-Postcode_3071-Postcode_3013-Postcode_3103-Postcode_3124
-Postcode_3207-Postcode_3044-Postcode_3187-Postcode_3122-Postcode_3104-Postcode_3070
-Postcode_3101-Postcode_3186-Postcode_3146-Postcode_3056-Postcode_3141-Postcode_3182
-Postcode_3072-Postcode_3165-Postcode_3073-Bedroom2-Car-BuildingArea-Rooms,data = housing_train)
sort(vif(train.fit),decreasing = T)
train.fit=lm(Price~.-Postcode_3039-Postcode_3071-Postcode_3013-Postcode_3103-Postcode_3124
-Postcode_3207-Postcode_3044-Postcode_3187-Postcode_3122-Postcode_3104-Postcode_3070
-Postcode_3101-Postcode_3186-Postcode_3146-Postcode_3056-Postcode_3141-Postcode_3182
-Postcode_3072-Postcode_3165-Postcode_3073-Bedroom2-Car-BuildingArea-Rooms-Postcode_3121,data = housing_train)
sort(vif(train.fit),decreasing = T)
train.fit=lm(Price~.-Postcode_3039-Postcode_3071-Postcode_3013-Postcode_3103-Postcode_3124
-Postcode_3207-Postcode_3044-Postcode_3187-Postcode_3122-Postcode_3104-Postcode_3070
-Postcode_3101-Postcode_3186-Postcode_3146-Postcode_3056-Postcode_3141-Postcode_3182
-Postcode_3072-Postcode_3165-Postcode_3073-Bedroom2-Car-BuildingArea-Rooms-Postcode_3121-Suburb_MalvernEast,data = housing_train)
sort(vif(train.fit),decreasing = T)
train.fit=lm(Price~.-Postcode_3039-Postcode_3071-Postcode_3013-Postcode_3103-Postcode_3124
-Postcode_3207-Postcode_3044-Postcode_3187-Postcode_3122-Postcode_3104-Postcode_3070
-Postcode_3101-Postcode_3186-Postcode_3146-Postcode_3056-Postcode_3141-Postcode_3182
-Postcode_3072-Postcode_3165-Postcode_3073-Bedroom2-Car-BuildingArea-Rooms-Postcode_3121-Suburb_MalvernEast
-CouncilArea_missing,data = housing_train)
sort(vif(train.fit),decreasing = T)
train.fit=step(train.fit)
summary(train.fit)
formula(train.fit)
train.fit=lm(Price ~ Distance + Bathroom + Landsize + Suburb_Doncaster + Suburb_Footscray +
Suburb_Thornbury + Suburb_Hampton + Suburb_Balwyn + Suburb_Camberwell +
Suburb_PortMelbourne + Suburb_PascoeVale + Suburb_BrightonEast +
Suburb_Hawthorn + Suburb_BalwynNorth + Suburb_Kew + Suburb_Brighton +
Suburb_GlenIris + Suburb_Brunswick + Suburb_SouthYarra +
Suburb_Preston + Suburb_Richmond + Suburb_BentleighEast +
Suburb_Reservoir + Type_u + Type_h + Method_PI + Method_S +
SellerG_Kay + SellerG_Miles + SellerG_Sweeney + SellerG_RT +
SellerG_Marshall + SellerG_hockingstuart + SellerG_Jellis +
SellerG_Nelson + Postcode_3147 + Postcode_3145 + Postcode_3127 +
Postcode_3081 + Postcode_3031 + Postcode_3181 + Postcode_3015 +
Postcode_3188 + Postcode_3084 + Postcode_3012 + Postcode_3204 +
Postcode_3058 + Postcode_3163 + Postcode_3040 + Postcode_3032 +
Postcode_3046 + Postcode_3020 + CouncilArea_Whitehorse +
CouncilArea_Brimbank + CouncilArea_Melbourne + CouncilArea_PortPhillip +
CouncilArea_Yarra + CouncilArea_Maribyrnong + CouncilArea_Stonnington +
CouncilArea_GlenEira + CouncilArea_MooneeValley + CouncilArea_Moreland +
CouncilArea_Boroondara-Postcode_3084,data = housing_train)
summary(train.fit)
train.fit=lm(Price ~ Distance + Bathroom + Landsize + Suburb_Doncaster + Suburb_Footscray +
Suburb_Thornbury + Suburb_Hampton + Suburb_Balwyn + Suburb_Camberwell +
Suburb_PortMelbourne + Suburb_PascoeVale + Suburb_BrightonEast +
Suburb_Hawthorn + Suburb_BalwynNorth + Suburb_Kew + Suburb_Brighton +
Suburb_GlenIris + Suburb_Brunswick + Suburb_SouthYarra +
Suburb_Preston + Suburb_Richmond + Suburb_BentleighEast +
Suburb_Reservoir + Type_u + Type_h + Method_PI + Method_S +
SellerG_Kay + SellerG_Miles + SellerG_Sweeney + SellerG_RT +
SellerG_Marshall + SellerG_hockingstuart + SellerG_Jellis +
SellerG_Nelson + Postcode_3147 + Postcode_3145 + Postcode_3127 +
Postcode_3081 + Postcode_3031 + Postcode_3181 + Postcode_3015 +
Postcode_3188 + Postcode_3084 + Postcode_3012 + Postcode_3204 +
Postcode_3058 + Postcode_3163 + Postcode_3040 + Postcode_3032 +
Postcode_3046 + Postcode_3020 + CouncilArea_Whitehorse +
CouncilArea_Brimbank + CouncilArea_Melbourne + CouncilArea_PortPhillip +
CouncilArea_Yarra + CouncilArea_Maribyrnong + CouncilArea_Stonnington +
CouncilArea_GlenEira + CouncilArea_MooneeValley + CouncilArea_Moreland +
CouncilArea_Boroondara-Postcode_3084-Suburb_PascoeVale,data = housing_train)
summary(train.fit)
train.fit=lm(Price ~ Distance + Bathroom + Landsize + Suburb_Doncaster + Suburb_Footscray +
Suburb_Thornbury + Suburb_Hampton + Suburb_Balwyn + Suburb_Camberwell +
Suburb_PortMelbourne + Suburb_PascoeVale + Suburb_BrightonEast +
Suburb_Hawthorn + Suburb_BalwynNorth + Suburb_Kew + Suburb_Brighton +
Suburb_GlenIris + Suburb_Brunswick + Suburb_SouthYarra +
Suburb_Preston + Suburb_Richmond + Suburb_BentleighEast +
Suburb_Reservoir + Type_u + Type_h + Method_PI + Method_S +
SellerG_Kay + SellerG_Miles + SellerG_Sweeney + SellerG_RT +
SellerG_Marshall + SellerG_hockingstuart + SellerG_Jellis +
SellerG_Nelson + Postcode_3147 + Postcode_3145 + Postcode_3127 +
Postcode_3081 + Postcode_3031 + Postcode_3181 + Postcode_3015 +
Postcode_3188 + Postcode_3084 + Postcode_3012 + Postcode_3204 +
Postcode_3058 + Postcode_3163 + Postcode_3040 + Postcode_3032 +
Postcode_3046 + Postcode_3020 + CouncilArea_Whitehorse +
CouncilArea_Brimbank + CouncilArea_Melbourne + CouncilArea_PortPhillip +
CouncilArea_Yarra + CouncilArea_Maribyrnong + CouncilArea_Stonnington +
CouncilArea_GlenEira + CouncilArea_MooneeValley + CouncilArea_Moreland +
CouncilArea_Boroondara-Postcode_3084-Suburb_PascoeVale-SellerG_Sweeney,data = housing_train)
summary(train.fit)
train.fit=lm(Price ~ Distance + Bathroom + Landsize + Suburb_Doncaster + Suburb_Footscray +
Suburb_Thornbury + Suburb_Hampton + Suburb_Balwyn + Suburb_Camberwell +
Suburb_PortMelbourne + Suburb_PascoeVale + Suburb_BrightonEast +
Suburb_Hawthorn + Suburb_BalwynNorth + Suburb_Kew + Suburb_Brighton +
Suburb_GlenIris + Suburb_Brunswick + Suburb_SouthYarra +
Suburb_Preston + Suburb_Richmond + Suburb_BentleighEast +
Suburb_Reservoir + Type_u + Type_h + Method_PI + Method_S +
SellerG_Kay + SellerG_Miles + SellerG_Sweeney + SellerG_RT +
SellerG_Marshall + SellerG_hockingstuart + SellerG_Jellis +
SellerG_Nelson + Postcode_3147 + Postcode_3145 + Postcode_3127 +
Postcode_3081 + Postcode_3031 + Postcode_3181 + Postcode_3015 +
Postcode_3188 + Postcode_3084 + Postcode_3012 + Postcode_3204 +
Postcode_3058 + Postcode_3163 + Postcode_3040 + Postcode_3032 +
Postcode_3046 + Postcode_3020 + CouncilArea_Whitehorse +
CouncilArea_Brimbank + CouncilArea_Melbourne + CouncilArea_PortPhillip +
CouncilArea_Yarra + CouncilArea_Maribyrnong + CouncilArea_Stonnington +
CouncilArea_GlenEira + CouncilArea_MooneeValley + CouncilArea_Moreland +
CouncilArea_Boroondara-Postcode_3084-Suburb_PascoeVale-SellerG_Sweeney-SellerG_Nelson,data = housing_train)
summary(train.fit)
train.fit=lm(Price ~ Distance + Bathroom + Landsize + Suburb_Doncaster + Suburb_Footscray +
Suburb_Thornbury + Suburb_Hampton + Suburb_Balwyn + Suburb_Camberwell +
Suburb_PortMelbourne + Suburb_PascoeVale + Suburb_BrightonEast +
Suburb_Hawthorn + Suburb_BalwynNorth + Suburb_Kew + Suburb_Brighton +
Suburb_GlenIris + Suburb_Brunswick + Suburb_SouthYarra +
Suburb_Preston + Suburb_Richmond + Suburb_BentleighEast +
Suburb_Reservoir + Type_u + Type_h + Method_PI + Method_S +
SellerG_Kay + SellerG_Miles + SellerG_Sweeney + SellerG_RT +
SellerG_Marshall + SellerG_hockingstuart + SellerG_Jellis +
SellerG_Nelson + Postcode_3147 + Postcode_3145 + Postcode_3127 +
Postcode_3081 + Postcode_3031 + Postcode_3181 + Postcode_3015 +
Postcode_3188 + Postcode_3084 + Postcode_3012 + Postcode_3204 +
Postcode_3058 + Postcode_3163 + Postcode_3040 + Postcode_3032 +
Postcode_3046 + Postcode_3020 + CouncilArea_Whitehorse +
CouncilArea_Brimbank + CouncilArea_Melbourne + CouncilArea_PortPhillip +
CouncilArea_Yarra + CouncilArea_Maribyrnong + CouncilArea_Stonnington +
CouncilArea_GlenEira + CouncilArea_MooneeValley + CouncilArea_Moreland +
CouncilArea_Boroondara-Postcode_3084-Suburb_PascoeVale-SellerG_Sweeney-SellerG_Nelson-SellerG_hockingstuart,data = housing_train)
summary(train.fit)
test.pred=predict(train.fit,newdata = housing_test)
((test.pred)-(housing_test$Price))**2%>%mean()%>%sqrt()
train.fit
summary(train.fit)
test.pred=predict(train.fit,newdata = housing_test)
sum(is.na(test.pred))
((test.pred)-(housing_test$Price))**2%>%mean()%>%sqrt()
View(housing_test)
sum(test.pred<0)
setwd('D:/EDVANCER/R/Project 1')
q()
View(housing_train)
library(tree)
library(randomForest)
train.tree.fit=tree::tree(Price~.,data = housing_train)
train.tree.fit
plot(train.tree.fit)
text(train.tree.fit)
test.tree.pred=predict(train.tree.fit,newdata = housing_test)
test.tree.pred
params=list(mtry=c(40,50,60,80,100,110),
ntree=c(200,300,500,700,1000),
maxnodes=c(5,10,15,20,50),
nodesize=c(1,2,5,10,20))
para_subset=function(param_list,n=10){
all_comb=expand.grid(param_list)
sam=sample(nrow(all_comb),n)
param_subset=all_comb[sam,]
return(param_subset)
}
subset_params=para_subset(params,20)
subset_params
library(cvTools)
myerror=99999            #we take a very high value of error
for(i in num_trials){
print(paste0('Starting iteration',i))
current_param=subset_params[i,]
k=cvTuning(randomForest,
tuning=current_param,
seed=2,
Price~.,
data=housing_train,
folds = cvFolds(nrow(housing_train),K=10,type='random')
)
score.this=k$cv[,2]
if(score.this<myerror){
print(current_param)
myerror=score.this
print(myerror)
best_params=current_param
}
print('DONE')
}
num_trials=20
myerror=99999            #we take a very high value of error
for(i in num_trials){
print(paste0('Starting iteration',i))
current_param=subset_params[i,]
k=cvTuning(randomForest,
tuning=current_param,
seed=2,
Price~.,
data=housing_train,
folds = cvFolds(nrow(housing_train),K=10,type='random')
)
score.this=k$cv[,2]
if(score.this<myerror){
print(current_param)
myerror=score.this
print(myerror)
best_params=current_param
}
print('DONE')
}
myerror=99999            #we take a very high value of error
for(i in 1:num_trials){
print(paste0('Starting iteration',i))
current_param=subset_params[i,]
k=cvTuning(randomForest,
tuning=current_param,
seed=2,
Price~.,
data=housing_train,
folds = cvFolds(nrow(housing_train),K=10,type='random')
)
score.this=k$cv[,2]
if(score.this<myerror){
print(current_param)
myerror=score.this
print(myerror)
best_params=current_param
}
print('DONE')
}
View(current_param)
myerror=999999            #we take a very high value of error
for(i in 1:num_trials){
print(paste0('Starting iteration',i))
current_param=subset_params[i,]
k=cvTuning(randomForest,
tuning=current_param,
seed=2,
Price~.,
data=housing_train,
folds = cvFolds(nrow(housing_train),K=10,type='random')
)
score.this=k$cv[,2]
if(score.this<myerror){
print(current_param)
myerror=score.this
print(myerror)
best_params=current_param
}
print('DONE')
}
View(current_param)
View(k)
View(k)
myerror=999999            #we take a very high value of error
for(i in 1:num_trials){
print(paste0('Starting iteration',i))
current_param=subset_params[i,]
k=cvTuning(randomForest,
tuning=current_param,
seed=2,
Price~.,
data=housing_train,
folds = cvFolds(nrow(housing_train),K=10,type='random')
)
score.this=k$cv[,2]
if(score.this<myerror){
print(current_param)
myerror=score.this
print(myerror)
best_params=current_param
}
print('DONE')
}
View(k)
params2=list(mtry=c(60,80),               #rf parameters(round2)
ntree=c(100,200),
maxnodes=c(10,50),
nodesize=c(10,30,50))
num_trials=24
subset_params2=para_subset(params,num_trials)    #take 24 comb
subset_params2
num_trials=24
subset_params2=para_subset(params2,num_trials)    #take 24 comb
subset_params2
myerror2=417474.1            #we take a high value of error(least error from previous round)
for(i in 1:num_trials){
print(paste0('Starting iteration',i))
current_param2=subset_params2[i,]
k=cvTuning(randomForest,
tuning=current_param2,
seed=2,
Price~.,
data=housing_train,
folds = cvFolds(nrow(housing_train),K=10,type='random')
)
score.this2=k$cv[,2]
if(score.this2<myerror2){
print(current_param2)
myerror2=score.this2
print(myerror2)
best_params2=current_param2
}
print('DONE')
}
params3=list(mtry=c(60,70),               #rf parameters(round3)
ntree=c(50,100,150),
maxnodes=c(50,100),
nodesize=c(50,100))
num_trials=24
subset_params3=para_subset(params3,num_trials)    #take 24 comb
subset_params3
View(k)
myerror3=412839.1            #we take a high value of error(least error from previous round)
for(i in 1:num_trials){
print(paste0('Starting iteration',i))
current_param3=subset_params3[i,]
k=cvTuning(randomForest,
tuning=current_param3,
seed=2,
Price~.,
data=housing_train,
folds = cvFolds(nrow(housing_train),K=10,type='random')
)
score.this3=k$cv[,2]
if(score.this3<myerror3){
print(current_param3)
myerror3=score.this3
print(myerror3)
best_params3=current_param3
}
print('DONE')
}
best_params3
best_params3=data.frame(best_params3)
View(best_params3)
myerror3
train.rf.final=randomForest(Price~.,                      #build model on entire train dataset
mtry=best_params3$mtry,
ntree=best_params3$ntree,
maxnodes=best_params3$maxnodes,
nodesize=best_params3$nodesize,
data=housing_train)
test.rf.pred=predict(train.rf.final,newdata = housing_test)
test.rf.pred
sum(test.rf.pred<0)
setwd('D:/EDVANCER/R/Project 1')
sum(is.na(test.rf.pred))
typeof(test.rf.pred)
write.csv(test.rf.pred,'Sayen_Das_P1_part2.csv',col.names = Price,row.names = F)
write.csv(test.rf.pred,'Sayen_Das_P1_part2.csv',col.names = 'Price',row.names = F)
write.csv(test.rf.pred,'Sayen_Das_P1_part2.csv',col.names = T,row.names = F)
write.table(test.rf.pred,file='Sayen_Das_P1_part2.csv',col.names = 'Price',row.names = F)
sapply(housing_all,function(x) sum(is.na(x)))
setwd('D:/EDVANCER/R/Project 1')
housing_train=read.csv('housing_train.csv')    #read train data
housing_test=read.csv('housing_test.csv')    #read test data
library(dplyr)
setwd('D:/EDVANCER/R/Project 1')
housing_train=read.csv('housing_train.csv')    #read train data
housing_test=read.csv('housing_test.csv')    #read test data
library(dplyr)
housing_train$data='train'    #add new col for identifying train daa
housing_test$data='test'      #add new col for identifying test data
housing_test$Price=NA
housing_all=rbind(housing_train,housing_test)
sapply(housing_all,function(x) sum(is.na(x)))
housing_h=housing_all$Price[housing_all$Type=='h']
housing_p=housing_all$Price[housing_all$Type=='p']
housing_t=housing_all$Price[housing_all$Type=='t']
rm(housing_p)
sum(housing_h)
sum(housing_h,na.rm=T)
sum(housing_t,na.rm=T)
(sum(housing_h,na.rm=T)/5916)-(sum(housing_t,na.rm=T)/1048)
unique(housing_all$Postcode)
nunique(housing_all$Postcode)
count(unique(housing_all$Postcode))
n(unique(housing_all$Postcode))
length(unique(housing_all$Postcode))
shapiro.test(housing_all$Distance)
fisher.test(housing_all$Distance)
ks.test(housing_all$Distance,'pnorm')
hist(housing_all$Distance)
hist(housing_train$Distance)
hist(housing_test$Distance)
housing_all%>%
group_by(SellerG)%>%
summarise(sum(Price))
housing_all%>%
group_by(SellerG)%>%
summarise(sum(Price,na.rm=T))
housing_all%>%
group_by(SellerG)%>%
summarise(sum(Price,na.rm=T))%>%
sort(sum(Price,na.rm=T))
housing_all%>%
group_by(SellerG)%>%
summarise(sum(Price,na.rm=T))%>%
arrange(sum(Price,na.rm=T))
housing_all%>%
group_by(SellerG)%>%
summarise(TotalPrice=sum(Price,na.rm=T))%>%
arrange(TotalPrice)
housing_all%>%
group_by(SellerG)%>%
summarise(TotalPrice=sum(Price,na.rm=T))%>%
arrange(desc(TotalPrice))
housing_train%>%
group_by(SellerG)%>%
summarise(TotalPrice=sum(Price,na.rm=T))%>%
arrange(desc(TotalPrice))
housing_all%>%
group_by(CouncilArea)%>%
summarise(AvPrice=mean(Price,na.rm=T))%>%
arrange(desc(AvPrice))
housing_all%>%
group_by(CouncilArea)%>%
summarise(AvPrice=sum(Price,na.rm=T))%>%
arrange(desc(AvPrice))
var(housing_all$Price)
var(housing_all$Price,na.rm=T)
housing_all%>%
group_by(CouncilArea)%>%
summarise(VarPrice=var(Price,na.rm=T))%>%
arrange(desc(VarPrice))
housing_train%>%
group_by(CouncilArea)%>%
summarise(VarPrice=var(Price,na.rm=T))%>%
arrange(desc(VarPrice))
var(housing_all$Price)
var(housing_all$Price,na.rm=T)
var(housing_train$Price,na.rm=T)
sum(is.na(housing_train$YearBuilt))
housing_h=housing_train$Price[housing_all$Type=='h']
housing_t=housing_train$Price[housing_all$Type=='t']
housing_h=housing_train$Price[housing_train$Type=='h']
housing_t=housing_train$Price[housing_train$Type=='t']
(sum(housing_h,na.rm=T)/4718)-(sum(housing_t,na.rm=T)/836)
